@import '~bootstrap/scss/mixins';
@import "../../assets/css/theme";

//
// Table
//


// General styles

.table {
  thead th {
    padding-top: $table-head-spacer-y;
    padding-bottom: $table-head-spacer-y;
    font-size: $table-head-font-size;
    text-transform: $table-head-text-transform;
    letter-spacing: $table-head-letter-spacing;
    background-color: $table-head-bg;
    border-bottom-width: $table-border-width;
  }

  th {
    font-weight: $table-head-font-weight;
  }

  td {
    .progress {
      height: 3px;
      width: 120px;
      margin: 0;
    }
  }

  td,
  th {
    font-size: $table-body-font-size;
    white-space: nowrap;
  }


  // Vertical align table content

  &.align-items-center {
    td,
    th {
      vertical-align: middle;
    }
  }


  // Styles for dark table

  &.tableDark thead,
  .theadDark {
    th {
      background-color: $table-dark-head-bg;
      color: $table-dark-head-color;

      a {
        color: $table-dark-head-color;
      }
    }
  }


  // Styles for light table

  .theadLight {
    th {
      background-color: $table-head-bg;
      color: $table-head-color;

      a {
        color: $table-head-color;
      }
    }
  }
}


// Add transition for hover state

.tableHover {
  tr {
    @include transition($transition-base);
  }
}


// Flush tables

.tableFlush {
  td,
  th {
    border-left: 0;
    border-right: 0;
  }

  tbody {
    tr {
      &:first-child {
        td,
        th {
          border-top: 0;
        }
      }

      &:last-child {
        td,
        th {
          border-bottom: 0;
        }
      }
    }
  }
}


// Tables inside cards

.card {
  .table {
    margin-bottom: 0;

    td,
    th {
      padding-left: $card-spacer-x;
      padding-right: $card-spacer-x;
    }
  }
}


// Fixes for custom elements inside tables

.table {
  .custom-toggle {
    display: block;
  }
}

//
// Card table
// table with spaced rows and styles with the card's properties
//

.tableCards {
  border-collapse:separate;
  border-spacing: 0 0.5rem;

  thead,
  tbody {
    th,
    td {
      border: 0 !important;
      position: relative;
      background-color: transparent;
    }

    td {
      padding: 1rem;
    }

    th {
      padding: 0 1rem;
    }
  }

  tbody tr {
    border-radius: $card-border-radius;

    @if $enable-shadows {
      @include box-shadow($card-shadow);
    }

    th {
      border-radius: $card-border-radius 0 0 $card-border-radius;

      &:after {
        border-radius: $card-border-radius 0 0 $card-border-radius;
        border-left: 1px solid $card-border-color;
      }
    }

    td {
      &:last-child {
        border-radius: 0 $card-border-radius $card-border-radius 0;

        &:after {
          border-radius: 0 $card-border-radius $card-border-radius 0;
          border-right: 1px solid $card-border-color;
        }
      }
    }

    th, td {
      background-color: $card-bg;


    }
  }

  &.tableHover {
    tbody > tr {
      &:hover {
        th,
        td {
          background-color: $table-hover-bg;
        }
      }
    }
  }
}

@include media-breakpoint-up(md) {
  .tableCards.tableScaleHover {
    tr {
      &:hover {
        transform: scale(1.02);
      }
    }
  }
}
