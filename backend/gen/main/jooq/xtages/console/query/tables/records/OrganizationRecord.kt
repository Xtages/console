/*
 * This file is generated by jOOQ.
 */
package xtages.console.query.tables.records


import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record6
import org.jooq.Row6
import org.jooq.impl.UpdatableRecordImpl

import xtages.console.query.enums.GithubAppInstallationStatus
import xtages.console.query.enums.OrganizationSubscriptionStatus
import xtages.console.query.tables.Organization


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class OrganizationRecord() : UpdatableRecordImpl<OrganizationRecord>(Organization.ORGANIZATION), Record6<String?, String?, OrganizationSubscriptionStatus?, Int?, Long?, GithubAppInstallationStatus?> {

    var name: String?
        set(value) = set(0, value)
        get() = get(0) as String?

    var stripeCustomerId: String?
        set(value) = set(1, value)
        get() = get(1) as String?

    var subscriptionStatus: OrganizationSubscriptionStatus?
        set(value) = set(2, value)
        get() = get(2) as OrganizationSubscriptionStatus?

    var ownerId: Int?
        set(value) = set(3, value)
        get() = get(3) as Int?

    var githubAppInstallationId: Long?
        set(value) = set(4, value)
        get() = get(4) as Long?

    var githubAppInstallationStatus: GithubAppInstallationStatus?
        set(value) = set(5, value)
        get() = get(5) as GithubAppInstallationStatus?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<String?> = super.key() as Record1<String?>

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row6<String?, String?, OrganizationSubscriptionStatus?, Int?, Long?, GithubAppInstallationStatus?> = super.fieldsRow() as Row6<String?, String?, OrganizationSubscriptionStatus?, Int?, Long?, GithubAppInstallationStatus?>
    override fun valuesRow(): Row6<String?, String?, OrganizationSubscriptionStatus?, Int?, Long?, GithubAppInstallationStatus?> = super.valuesRow() as Row6<String?, String?, OrganizationSubscriptionStatus?, Int?, Long?, GithubAppInstallationStatus?>
    override fun field1(): Field<String?> = Organization.ORGANIZATION.NAME
    override fun field2(): Field<String?> = Organization.ORGANIZATION.STRIPE_CUSTOMER_ID
    override fun field3(): Field<OrganizationSubscriptionStatus?> = Organization.ORGANIZATION.SUBSCRIPTION_STATUS
    override fun field4(): Field<Int?> = Organization.ORGANIZATION.OWNER_ID
    override fun field5(): Field<Long?> = Organization.ORGANIZATION.GITHUB_APP_INSTALLATION_ID
    override fun field6(): Field<GithubAppInstallationStatus?> = Organization.ORGANIZATION.GITHUB_APP_INSTALLATION_STATUS
    override fun component1(): String? = name
    override fun component2(): String? = stripeCustomerId
    override fun component3(): OrganizationSubscriptionStatus? = subscriptionStatus
    override fun component4(): Int? = ownerId
    override fun component5(): Long? = githubAppInstallationId
    override fun component6(): GithubAppInstallationStatus? = githubAppInstallationStatus
    override fun value1(): String? = name
    override fun value2(): String? = stripeCustomerId
    override fun value3(): OrganizationSubscriptionStatus? = subscriptionStatus
    override fun value4(): Int? = ownerId
    override fun value5(): Long? = githubAppInstallationId
    override fun value6(): GithubAppInstallationStatus? = githubAppInstallationStatus

    override fun value1(value: String?): OrganizationRecord {
        this.name = value
        return this
    }

    override fun value2(value: String?): OrganizationRecord {
        this.stripeCustomerId = value
        return this
    }

    override fun value3(value: OrganizationSubscriptionStatus?): OrganizationRecord {
        this.subscriptionStatus = value
        return this
    }

    override fun value4(value: Int?): OrganizationRecord {
        this.ownerId = value
        return this
    }

    override fun value5(value: Long?): OrganizationRecord {
        this.githubAppInstallationId = value
        return this
    }

    override fun value6(value: GithubAppInstallationStatus?): OrganizationRecord {
        this.githubAppInstallationStatus = value
        return this
    }

    override fun values(value1: String?, value2: String?, value3: OrganizationSubscriptionStatus?, value4: Int?, value5: Long?, value6: GithubAppInstallationStatus?): OrganizationRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        return this
    }

    /**
     * Create a detached, initialised OrganizationRecord
     */
    constructor(name: String? = null, stripeCustomerId: String? = null, subscriptionStatus: OrganizationSubscriptionStatus? = null, ownerId: Int? = null, githubAppInstallationId: Long? = null, githubAppInstallationStatus: GithubAppInstallationStatus? = null): this() {
        this.name = name
        this.stripeCustomerId = stripeCustomerId
        this.subscriptionStatus = subscriptionStatus
        this.ownerId = ownerId
        this.githubAppInstallationId = githubAppInstallationId
        this.githubAppInstallationStatus = githubAppInstallationStatus
    }
}
