/*
 * This file is generated by jOOQ.
 */
package xtages.console.query.tables.daos


import kotlin.collections.List

import org.jooq.Configuration
import org.jooq.impl.DAOImpl
import org.springframework.stereotype.Repository

import xtages.console.query.tables.StripeCheckoutSession
import xtages.console.query.tables.records.StripeCheckoutSessionRecord


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
@Repository
open class StripeCheckoutSessionDao(configuration: Configuration?) : DAOImpl<StripeCheckoutSessionRecord, xtages.console.query.tables.pojos.StripeCheckoutSession, String>(StripeCheckoutSession.STRIPE_CHECKOUT_SESSION, xtages.console.query.tables.pojos.StripeCheckoutSession::class.java, configuration) {

    /**
     * Create a new StripeCheckoutSessionDao without any configuration
     */
    constructor(): this(null)

    override fun getId(o: xtages.console.query.tables.pojos.StripeCheckoutSession): String? = o.organizationName

    /**
     * Fetch records that have <code>organization_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    fun fetchRangeOfOrganizationName(lowerInclusive: String?, upperInclusive: String?): List<xtages.console.query.tables.pojos.StripeCheckoutSession> = fetchRange(StripeCheckoutSession.STRIPE_CHECKOUT_SESSION.ORGANIZATION_NAME, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>organization_name IN (values)</code>
     */
    fun fetchByOrganizationName(vararg values: String): List<xtages.console.query.tables.pojos.StripeCheckoutSession> = fetch(StripeCheckoutSession.STRIPE_CHECKOUT_SESSION.ORGANIZATION_NAME, *values)

    /**
     * Fetch a unique record that has <code>organization_name = value</code>
     */
    fun fetchOneByOrganizationName(value: String): xtages.console.query.tables.pojos.StripeCheckoutSession? = fetchOne(StripeCheckoutSession.STRIPE_CHECKOUT_SESSION.ORGANIZATION_NAME, value)

    /**
     * Fetch records that have <code>stripe_checkout_session_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    fun fetchRangeOfStripeCheckoutSessionId(lowerInclusive: String?, upperInclusive: String?): List<xtages.console.query.tables.pojos.StripeCheckoutSession> = fetchRange(StripeCheckoutSession.STRIPE_CHECKOUT_SESSION.STRIPE_CHECKOUT_SESSION_ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>stripe_checkout_session_id IN (values)</code>
     */
    fun fetchByStripeCheckoutSessionId(vararg values: String): List<xtages.console.query.tables.pojos.StripeCheckoutSession> = fetch(StripeCheckoutSession.STRIPE_CHECKOUT_SESSION.STRIPE_CHECKOUT_SESSION_ID, *values)
}
