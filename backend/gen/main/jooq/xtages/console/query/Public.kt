/*
 * This file is generated by jOOQ.
 */
package xtages.console.query


import kotlin.collections.List

import org.jooq.Catalog
import org.jooq.Sequence
import org.jooq.Table
import org.jooq.impl.SchemaImpl

import xtages.console.query.sequences.XTAGES_USER_ID_SEQ
import xtages.console.query.tables.Organization
import xtages.console.query.tables.StripeCheckoutSession
import xtages.console.query.tables.XtagesUser


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class Public : SchemaImpl("public", DefaultCatalog.DEFAULT_CATALOG) {
    companion object {

        /**
         * The reference instance of <code>public</code>
         */
        val PUBLIC = Public()
    }

    /**
     * The table <code>public.organization</code>.
     */
    val ORGANIZATION get() = Organization.ORGANIZATION

    /**
     * The table <code>public.stripe_checkout_session</code>.
     */
    val STRIPE_CHECKOUT_SESSION get() = StripeCheckoutSession.STRIPE_CHECKOUT_SESSION

    /**
     * The table <code>public.xtages_user</code>.
     */
    val XTAGES_USER get() = XtagesUser.XTAGES_USER

    override fun getCatalog(): Catalog = DefaultCatalog.DEFAULT_CATALOG

    override fun getSequences(): List<Sequence<*>> = listOf(
        XTAGES_USER_ID_SEQ
    )

    override fun getTables(): List<Table<*>> = listOf(
        Organization.ORGANIZATION,
        StripeCheckoutSession.STRIPE_CHECKOUT_SESSION,
        XtagesUser.XTAGES_USER
    )
}
