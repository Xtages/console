/*
 * This file is generated by jOOQ.
 */
package xtages.console.query.tables.daos


import kotlin.collections.List

import org.jooq.Configuration
import org.jooq.impl.DAOImpl
import org.springframework.stereotype.Repository

import xtages.console.query.tables.XtagesUser
import xtages.console.query.tables.records.XtagesUserRecord


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
@Repository
open class XtagesUserDao(configuration: Configuration?) : DAOImpl<XtagesUserRecord, xtages.console.query.tables.pojos.XtagesUser, Int>(XtagesUser.XTAGES_USER, xtages.console.query.tables.pojos.XtagesUser::class.java, configuration) {

    /**
     * Create a new XtagesUserDao without any configuration
     */
    constructor(): this(null)

    override fun getId(o: xtages.console.query.tables.pojos.XtagesUser): Int? = o.id

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    fun fetchRangeOfId(lowerInclusive: Int?, upperInclusive: Int?): List<xtages.console.query.tables.pojos.XtagesUser> = fetchRange(XtagesUser.XTAGES_USER.ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    fun fetchById(vararg values: Int): List<xtages.console.query.tables.pojos.XtagesUser> = fetch(XtagesUser.XTAGES_USER.ID, *values.toTypedArray())

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    fun fetchOneById(value: Int): xtages.console.query.tables.pojos.XtagesUser? = fetchOne(XtagesUser.XTAGES_USER.ID, value)

    /**
     * Fetch records that have <code>cognito_user_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    fun fetchRangeOfCognitoUserId(lowerInclusive: String?, upperInclusive: String?): List<xtages.console.query.tables.pojos.XtagesUser> = fetchRange(XtagesUser.XTAGES_USER.COGNITO_USER_ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>cognito_user_id IN (values)</code>
     */
    fun fetchByCognitoUserId(vararg values: String): List<xtages.console.query.tables.pojos.XtagesUser> = fetch(XtagesUser.XTAGES_USER.COGNITO_USER_ID, *values)

    /**
     * Fetch a unique record that has <code>cognito_user_id = value</code>
     */
    fun fetchOneByCognitoUserId(value: String): xtages.console.query.tables.pojos.XtagesUser? = fetchOne(XtagesUser.XTAGES_USER.COGNITO_USER_ID, value)
}
