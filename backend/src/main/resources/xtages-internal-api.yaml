openapi: 3.0.0
info:
  version: 0.0.1
  title: Xtages Internal API
  description: |
    Xtages internal API. Some of these endpoints might be extracted to an external API in the future.
servers:
  - url: https://console.xtages.com/api/v1
security:
  - bearerAuth: []
paths:
  /project:
    post:
      summary: Creates a new Xtages project
      operationId: createProject
      tags:
        - project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateProjectReq"
      responses:
        '201':
          description: Project was created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        default:
          $ref: "#/components/responses/DefaultError"
  /project/{projectName}/ci:
    post:
      summary: Run continuous integration for the project specified
      operationId: ci
      tags:
        - ci
      parameters:
        - in: path
          name: projectName
          schema:
            type: string
            minLength: 1
          required: true
          description: Name of the project to run the CI operation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CIReq"
      responses:
        "200":
          description: Request to run a CI was successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CI"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        default:
          $ref: "#/components/responses/DefaultError"
  /project/{projectName}/ci/{id}/logs:
    get:
      summary: Retrieve logs for a given CI and certain project
      operationId: logs
      tags:
        - logs
      parameters:
        - in: path
          name: projectName
          schema:
            type: string
            minLength: 1
          required: true
          description: Name of the project to get the logs from
        - in: path
          name: id
          schema:
            type: integer
            format: int64
          required: true
          description: CI id that was run for the project. This is the output of /project/{projectName}/ci
      responses:
        "200":
          description: Logs successfully returned
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CILogs"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        default:
          $ref: "#/components/responses/DefaultError"
  /project/{projectName}/cd:
    post:
      summary: Run continuous delivery for the project specified
      operationId: cd
      tags:
        - cd
      parameters:
        - in: path
          name: projectName
          schema:
            type: string
            minLength: 1
          required: true
          description: Name of the project to run the CD operation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CDReq"
      responses:
        "200":
          description: Request to run a CI was successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CD"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        default:
          $ref: "#/components/responses/DefaultError"
  /organization:
    post:
      summary: Creates a new Organization beloging to a user, if the user doesn't exist then it's created also
      operationId: createOrganization
      tags:
        - organization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateOrgReq"
      responses:
        '201':
          description: Organization was created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        default:
          $ref: "#/components/responses/DefaultError"
  /checkout/session:
    post:
      summary: Creates a Stripe Checkout session
      operationId: createCheckoutSession
      tags:
        - checkout
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCheckoutSessionReq"
      responses:
        '201':
          description: A new Stripe session was created
          content:
            application/json:
              schema:
                type: string
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        default:
          $ref: "#/components/responses/DefaultError"
  /checkout/portal/session:
    post:
      summary: Gets a Stripe customer portal session URI
      operationId: getCustomerPortalSession
      tags:
        - checkout
      responses:
        '200':
          description: A new customer portal session URI
          content:
            application/json:
              schema:
                type: string
                format: uri
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        default:
          $ref: "#/components/responses/DefaultError"
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    ErrorDesc:
      description: General API error
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    Organization:
      description: An Organization
      properties:
        name:
          type: string
          minLength: 1
        subscription_status:
          type: string
          enum:
            - UNCONFIRMED
            - ACTIVE
            - SUSPENDED
            - PENDING_CANCELLATION
            - CANCELLED
    CreateOrgReq:
      description: Request made to POST /organization
      required:
        - organizationName
        - ownerCognitoUserId
      properties:
        organizationName:
          type: string
          minLength: 1
        ownerCognitoUserId:
          type: string
          minLength: 1
    Project:
      description: An Xtages project
      properties:
        id:
          type: integer
        name:
          type: string
          minLength: 1
        type:
          type: string
          enum:
            - NODE
        version:
          type: string
          minLength: 1
        pass_check_rule_enabled:
          type: boolean
    CreateProjectReq:
      description: Request made to POST /project
      required:
        - name
        - type
        - version
      properties:
        name:
          type: string
          minLength: 1
        type:
          type: string
          enum:
            - NODE
        version:
          type: string
          minLength: 1
        passCheckRuleEnabled:
          type: boolean
          default: false
    CI:
      description: A reference to the run CI
      properties:
        id:
          type: integer
          format: int64
    CIReq:
      description: Request made to POST /ci
      required:
        - commitId
      properties:
        commitId:
          type: string
          minLength: 1
    CILogs:
      description: CI Logs
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/LogEvent'
    CD:
      description: A reference to the run CD
      properties:
        id:
          type: integer
          format: int64
    CDReq:
      description: Request made to POST /cd
      required:
        - commitId
        - env
      properties:
        commitId:
          type: string
          minLength: 1
        env:
          type: string
          minLength: 1
    CreateCheckoutSessionReq:
      description: Request made to POST /checkout/session
      required:
        - organizationName
        - priceIds
      properties:
        organizationName:
          type: string
          minLength: 1
        priceIds:
          type: array
          items:
            type: string
            minItems: 1
    LogEvent:
      description: Log events
      properties:
        timestamp:
          type: integer
          format: int64
        message:
          type: string
          minLength: 1
  responses:
    DefaultError:
      description: Default error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorDesc"
    UnauthorizedError:
      description: Authorization error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorDesc"
